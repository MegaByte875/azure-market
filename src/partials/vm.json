{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Base uri of resources"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "vm": {
      "type": "object",
      "metadata": {
        "description": "vm configuration"
      }
    },
    "index": {
      "type": "int",
      "metadata": {
        "description": "the outer loop index"
      }
    },
    "availabilitySet": {
      "type": "string",
      "metadata": {
        "description": "The name of the availability set"
      }
    },
    "metaAddress": {
      "type": "string",
      "metadata": {
        "description": "The address of meta nodes"
      }
    },
    "nebulaTags": {
      "type": "object",
      "defaultValue": {
        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
      },
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    }
  },
  "variables": {
    "namespace": "[parameters('vm').namespace]",
    "computername": "[concat(parameters('vm').namespace, parameters('index'))]",
    "password_osProfile": {
      "computername": "[variables('computername')]",
      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
      "adminPassword": "[parameters('vm').shared.credentials.password]"
    },
    "sshPublicKey_osProfile": {
      "computername": "[variables('computername')]",
      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('vm').shared.credentials.adminUsername, '/.ssh/authorized_keys')]",
              "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
            }
          ]
        }
      }
    },
    "osProfile": "[variables(concat(parameters('vm').shared.credentials.authenticationType, '_osProfile'))]",
    "nicName": "[concat(variables('namespace'), parameters('index'), '-nic')]",
    "nicId": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
  },
  "resources": [
    {
      "apiVersion": "2020-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('namespace'), parameters('index'))]",
      "location": "[parameters('vm').shared.location]",
      "tags": {
        "provider": "[toUpper(parameters('nebulaTags').provider)]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vm').shared.size]"
        },
        "osProfile": "[variables('osProfile')]",
        "storageProfile": {
          "imageReference": "[parameters('vm').imageReference]",
          "osDisk": {
            "name": "[concat(variables('namespace'), parameters('index'), '-osdisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('vm').storageAccountType]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('nicId')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('namespace'), parameters('index'), '/script')]",
          "apiVersion": "2020-12-01",
          "location": "[parameters('vm').shared.location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('namespace'), parameters('index')))]"
          ],
          "properties": "[parameters('vm').installScript]"
        }
      ]
    }
  ],
  "outputs": {}
}