{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "ngSettings": {
      "type": "object",
      "metadata": {
        "description": "The NebulaGraph settings"
      }
    },
    "commonVmSettings": {
      "type": "object",
      "metadata": {
        "description": "Shared VM settings"
      }
    },
    "topologySettings": {
      "type": "object",
      "metadata": {
        "description": "Aggregate for topology variable"
      }
    },
    "networkSettings": {
      "type": "object",
      "metadata": {
        "description": "Network settings"
      }
    },
    "metaAddress": {
      "type": "string",
      "metadata": {
        "description": "The address of meta nodes"
      }
    },
    "sharedStorageAccount": {
      "type": "secureObject",
      "metadata": {
        "description": "The shared storage settings"
      }
    },
    "nebulaTags": {
      "type": "object",
      "defaultValue": {
        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
      },
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    }
  },
  "variables": {
    "nodesTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('partials/node-resources.json', parameters('_artifactsLocationSasToken')))]",
    "ubuntuScripts": [
      "[uri(parameters('_artifactsLocation'), concat('scripts/nebula-install.sh', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), concat('scripts/dashboard-install.sh', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), concat('scripts/studio-install.sh', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), concat('scripts/explorer-install.sh', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), concat('scripts/vm-disk-utils.sh', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), concat('scripts/privateip.sh', parameters('_artifactsLocationSasToken')))]"
    ],
    "ubuntuSettings": {
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest"
      },
      "managementPort": 22,
      "extensionSettings": {
        "graph": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[concat('bash privateip.sh ', ' graph ', parameters('metaAddress'), ' ', parameters('ngSettings').version)]"
          }
        },
        "meta": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[concat('bash privateip.sh ', ' meta ', parameters('metaAddress'), ' ', parameters('ngSettings').version)]"
          }
        },
        "storage": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[concat('bash privateip.sh ', ' storage ', parameters('metaAddress'), ' ', parameters('ngSettings').version)]"
          }
        },
        "studio": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[concat('bash studio-install.sh ')]"
          }
        },
        "explorer": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[concat('bash explorer-install.sh ')]"
          }
        },
        "dashboard": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[concat('bash dashboard-install.sh ')]"
          }
        }
      }
    }
  },
  "resources": [
    {
      "name": "nebula-nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-04-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nodesTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "osSettings": {
            "value": "[variables('ubuntuSettings')]"
          },
          "commonVmSettings": {
            "value": "[parameters('commonVmSettings')]"
          },
          "topologySettings": {
            "value": "[parameters('topologySettings')]"
          },
          "networkSettings": {
            "value": "[parameters('networkSettings')]"
          },
          "nebulaTags": {
            "value": "[parameters('nebulaTags')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
